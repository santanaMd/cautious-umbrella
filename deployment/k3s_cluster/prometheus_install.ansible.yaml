#
##
### Adicionar repositório Helm
##
#

- name: Adicionar o repositório Helm Kube Prometheus Stack
  community.kubernetes.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
    state: present
    force_update: true

#
##
### Instalar o Kube Prometheus Stack
##
#

- name: Instalar o chart Kube Prometheus Stack usando Helm
  community.kubernetes.helm:
    name: prometheus-community
    chart_ref: prometheus-community/kube-prometheus-stack
    namespace: monitoring
    create_namespace: true
    release_state: present
    chart_version: "{{ kube_prometheus_chart_version }}"
    values:
      grafana:
        persistence:
          enabled: true
          type: sts
          storageClassName: "local-path"
          accessModes:
            - ReadWriteOnce
          size: 15Gi
          finalizers:
            - kubernetes.io/pvc-protection
      prometheus:
        prometheusSpec:
          storageSpec:
            volumeClaimTemplate:
              spec:
                storageClassName: "local-path"
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 30Gi
      alertmanager:
        alertmanagerSpec:
            storage: 
              volumeClaimTemplate:
                spec:
                  storageClassName: "local-path"
                  accessModes: 
                    - "ReadWriteOnce"
                  resources:
                      requests:
                        storage: 15Gi


#
##
### Criar o Traefik IngressRoute
##
#

- name: Criar IngressRoute para o Grafana com Traefik 3
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: IngressRoute
      metadata:
        name: ingressroute-grafana-monitoring
        namespace: monitoring
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
      spec:
        entryPoints:
          - websecure
        routes:
          - match: "Host(`grafana-monitoring.{{ domain_name }}`)"
            kind: Rule
            services:
              - name: prometheus-community-grafana
                port: 80
        tls:
          secretName: grafana-monitoring-cert-manager-secret
